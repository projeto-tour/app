-- MySQL Script generated by MySQL Workbench
-- 10/08/16 18:54:36
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema partiu_db
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema partiu_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `partiu_db` DEFAULT CHARACTER SET utf8 ;
USE `partiu_db` ;

-- -----------------------------------------------------
-- Table `partiu_db`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `partiu_db`.`usuario` (
  `id` BIGINT NOT NULL AUTO_INCREMENT COMMENT 'id do usuário (pk)',
  `email` VARCHAR(45) NOT NULL COMMENT 'email do usuário (deve ser único)',
  `senha` VARCHAR(256) NOT NULL COMMENT 'senha do usuário',
  `alias` VARCHAR(20) NOT NULL COMMENT 'alias do usuário (deve ser único)',
  `nome` VARCHAR(50) NOT NULL COMMENT 'nome do usuário',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  UNIQUE INDEX `alias_UNIQUE` (`alias` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `partiu_db`.`tipo_agenda`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `partiu_db`.`tipo_agenda` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'id do tipo de agenda (pk)',
  `descricao` VARCHAR(50) NOT NULL COMMENT 'descrição do tipo de agenda.',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `descricao_UNIQUE` (`descricao` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `partiu_db`.`agenda`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `partiu_db`.`agenda` (
  `id` BIGINT NOT NULL AUTO_INCREMENT COMMENT 'id da agenda criada pelo usuário (pk)',
  `usuario_id` BIGINT NOT NULL,
  `id_tipo_agenda` INT NOT NULL COMMENT 'id do tipo de agenda (fk_agenda_tipo_agenda)',
  `descricao` VARCHAR(50) NOT NULL COMMENT 'descricao da agenda',
  `data_inicio` DATETIME NOT NULL COMMENT 'data e hora de início prevista para a agenda',
  `data_fim` DATETIME NULL COMMENT 'data e hora de término prevista para a agenda',
  `data_criacao_agenda` DATETIME NOT NULL COMMENT 'data e hora de criação da agenda',
  PRIMARY KEY (`id`),
  INDEX `fk_agenda_tipo_agenda_idx` (`id_tipo_agenda` ASC),
  INDEX `fk_agenda_usuario_idx` (`usuario_id` ASC),
  CONSTRAINT `fk_agenda_tipo_agenda`
    FOREIGN KEY (`id_tipo_agenda`)
    REFERENCES `partiu_db`.`tipo_agenda` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_agenda_usuario`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `partiu_db`.`usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `partiu_db`.`tipo_transporte`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `partiu_db`.`tipo_transporte` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'id do tipo de transporte (pk).\nEx.: carro, avião, a pé, etc.',
  `descricao` VARCHAR(50) NOT NULL COMMENT 'Referente ao tipo de transporte utilizado. Ex.: aéreo, terrestre, etc.',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `descricao_UNIQUE` (`descricao` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `partiu_db`.`transporte`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `partiu_db`.`transporte` (
  `id` BIGINT NOT NULL AUTO_INCREMENT COMMENT 'id do transporte (pk)',
  `id_tipo_transporte` INT NOT NULL COMMENT 'id do tipo de transporte descrito (fk_transporte_tipo_transporte).',
  `descricao` VARCHAR(50) NOT NULL COMMENT 'Referente ao meio de transporte utilizado.\nEx.: avião, carro, ônibus, etc ...\n',
  PRIMARY KEY (`id`),
  INDEX `fk_transporte_tipo_transporte_idx` (`id_tipo_transporte` ASC),
  UNIQUE INDEX `descricao_UNIQUE` (`descricao` ASC),
  CONSTRAINT `fk_transporte_tipo_transporte`
    FOREIGN KEY (`id_tipo_transporte`)
    REFERENCES `partiu_db`.`tipo_transporte` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `partiu_db`.`tipo_ponto_interesse`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `partiu_db`.`tipo_ponto_interesse` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `descricao` VARCHAR(45) NOT NULL COMMENT 'Referente aos tipos possíveis de pontos de interesse.\nEx.: alimentacao, negocio, hospedagem, evento, passeio, etc.',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `descricao_UNIQUE` (`descricao` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `partiu_db`.`ponto_interesse`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `partiu_db`.`ponto_interesse` (
  `id` BIGINT NOT NULL AUTO_INCREMENT COMMENT 'id do ponto de interesse (pk)',
  `tipo_ponto_interesse_id` BIGINT NOT NULL,
  `descricao` VARCHAR(50) NOT NULL COMMENT 'descrição do ponto de interesse',
  `localizacao` VARCHAR(60) NULL COMMENT 'Localização do ponto de interesse. Pode ser por geolocalizacao ou inserção manual do usuário.',
  `observacao` VARCHAR(50) NULL COMMENT 'observação sobre o ponto de interesse, se houver.',
  PRIMARY KEY (`id`),
  INDEX `fk_ponto_interesse_tipo_ponto_interesse1_idx` (`tipo_ponto_interesse_id` ASC),
  CONSTRAINT `fk_ponto_interesse_tipo_ponto_interesse1`
    FOREIGN KEY (`tipo_ponto_interesse_id`)
    REFERENCES `partiu_db`.`tipo_ponto_interesse` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `partiu_db`.`rota`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `partiu_db`.`rota` (
  `id` BIGINT NOT NULL AUTO_INCREMENT COMMENT 'id do percurso (pk)',
  `id_pai` BIGINT NOT NULL,
  `agenda_id` BIGINT NOT NULL,
  `ponto_interesse_id` BIGINT NOT NULL,
  `transporte_id` BIGINT NOT NULL,
  `data_saida` DATETIME NOT NULL COMMENT 'data e hora previstas para início do percurso',
  `data_chegada` DATETIME NULL COMMENT 'data e hora previstas para o término do percurso',
  `ponto_partida` VARCHAR(50) NOT NULL COMMENT 'ponto de partida (pode conter dado de geolocalização ou informação digitada pelo usuário)',
  `ponto_chegada` VARCHAR(50) NULL,
  `distancia` INT NULL COMMENT 'Distância em metros entre os pontos.',
  PRIMARY KEY (`id`),
  INDEX `fk_percurso_agenda1_idx` (`agenda_id` ASC),
  INDEX `fk_rota_rota1_idx` (`id_pai` ASC),
  INDEX `fk_rota_transporte1_idx` (`transporte_id` ASC),
  INDEX `fk_rota_ponto_interesse1_idx` (`ponto_interesse_id` ASC),
  CONSTRAINT `fk_percurso_agenda1`
    FOREIGN KEY (`agenda_id`)
    REFERENCES `partiu_db`.`agenda` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_rota_rota1`
    FOREIGN KEY (`id_pai`)
    REFERENCES `partiu_db`.`rota` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_rota_transporte1`
    FOREIGN KEY (`transporte_id`)
    REFERENCES `partiu_db`.`transporte` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_rota_ponto_interesse1`
    FOREIGN KEY (`ponto_interesse_id`)
    REFERENCES `partiu_db`.`ponto_interesse` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `partiu_db`.`preferencias_usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `partiu_db`.`preferencias_usuario` (
  `id` BIGINT NOT NULL AUTO_INCREMENT COMMENT 'id da preferência do usuário',
  `usuario_id` BIGINT NOT NULL,
  `tipo_ponto_interesse_id` BIGINT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_preferencias_usuario_usuario1_idx` (`usuario_id` ASC),
  INDEX `fk_preferencias_usuario_tipo_ponto_interesse1_idx` (`tipo_ponto_interesse_id` ASC),
  CONSTRAINT `fk_preferencias_usuario_usuario1`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `partiu_db`.`usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_preferencias_usuario_tipo_ponto_interesse1`
    FOREIGN KEY (`tipo_ponto_interesse_id`)
    REFERENCES `partiu_db`.`tipo_ponto_interesse` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
